syntax = "proto3";
package bnbchain.bfs.payment;

import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";

// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/bnb-chain/bfs/x/payment/types";

// Msg defines the Msg service.
service Msg {
  rpc CreatePaymentAccount(MsgCreatePaymentAccount) returns (MsgCreatePaymentAccountResponse);
  rpc Deposit(MsgDeposit) returns (MsgDepositResponse);
  rpc Withdraw(MsgWithdraw) returns (MsgWithdrawResponse);
  rpc Sponse(MsgSponse) returns (MsgSponseResponse);
  // this line is used by starport scaffolding # proto/tx/rpc
}

message MsgCreatePaymentAccount {
  string creator = 1;
}

message MsgCreatePaymentAccountResponse {
  string addr = 1;
  uint64 count = 2;
}

message MsgDeposit {
  string creator = 1;
  string to = 2;
  string amount = 3 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
}

message MsgDepositResponse {}

message MsgWithdraw {
  string creator = 1;
  string from = 2;
  string amount = 3 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
}

message MsgWithdrawResponse {}

message MsgSponse {
  string creator = 1;
  string to = 2;
  string rate = 3 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
}

message MsgSponseResponse {}

// this line is used by starport scaffolding # proto/tx/message
