syntax = "proto3";
package bnbchain.greenfield.sp;

import "cosmos/base/v1beta1/coin.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/bnb-chain/greenfield/x/sp/types";

// Description defines a storage provider description.
message Description {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_stringer) = false;

  // moniker defines a human-readable name for the storage provider
  string moniker = 1;
  // identity defines an optional identity signature (ex. UPort or Keybase).
  string identity = 2;
  // website defines an optional website link.
  string website = 3;
  // security_contact defines an optional email for security contact.
  string security_contact = 4;
  // details define other optional details.
  string details = 5;
}

// Status is the status of a storage provider.
enum Status {
  option (gogoproto.goproto_enum_prefix) = false;

  STATUS_IN_SERVICE = 0;
  STATUS_IN_JAILED = 1;
  STATUS_GRACEFUL_EXITING = 2;
  STATUS_OUT_OF_SERVICE = 3;
}

// StorageProvider defines the meta info of storage provider
// TODO: add endpoint for RPC/HTTP/Websocket and p2p identity
// TODO: add more account address for different role.
message StorageProvider {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_stringer) = false;

  // operator_address defines the address of the sp's operator; It also is the unqiue index key of sp.
  string operator_address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // fund_address is the account address of the storage provider for deposit, remuneration.
  string funding_address = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // seal_address is the account address of the storage provider for sealObject
  string seal_address = 3 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // approval_address is the account address of the storage provider for ack CreateBuclet/Object.
  string approval_address = 4 [(cosmos_proto.scalar) = "cosmos.AddressString"]; 
  // total_deposit define the deposit token
  string total_deposit = 5 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  // status is the status of sp, which can be (in_service/read_only_service/graceful_exiting/out_of_service)
  Status status = 6;
  // description defines the description terms for the validator.
  Description description = 7 [(gogoproto.nullable) = false];
}

message RewardInfo {
  string address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  cosmos.base.v1beta1.Coin amount = 2 [(gogoproto.nullable) = false];
}
