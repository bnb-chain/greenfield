syntax = "proto3";
package bnbchain.greenfield.sp;

import "cosmos/base/v1beta1/coin.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "greenfield/sp/types.proto";

// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/bnb-chain/greenfield/x/sp/types";

// Msg defines the Msg service for creating a new storage provider.
// TODO: add a transaction that the Storage Provide claim themself enter short time maintenance to avoid slash
service Msg {
  rpc CreateStorageProvider(MsgCreateStorageProvider) returns (MsgCreateStorageProviderResponse);
  rpc Deposit(MsgDeposit) returns (MsgDepositResponse);
  rpc EditStorageProvider(MsgEditStorageProvider) returns (MsgEditStorageProviderResponse);
  // this line is used by starport scaffolding # proto/tx/rpc
}

// MsgCreateStorageProvider defines message for creating a new storage provider.
message MsgCreateStorageProvider {
  option (cosmos.msg.v1.signer) = "creator";

  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  Description description = 2 [(gogoproto.nullable) = false];
  string sp_address = 3 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string funding_address = 4 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string seal_address = 5 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string approval_address = 6 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string endpoint = 7;
  cosmos.base.v1beta1.Coin deposit = 8 [(gogoproto.nullable) = false];
}

// MsgCreateStorageProviderResponse defines the Msg/CreateStorageProvider response type.
message MsgCreateStorageProviderResponse {}

// MsgDeposit defines a SDK message for deposit token for sp.
message MsgDeposit {
  option (cosmos.msg.v1.signer) = "creator";

  // creator is the msg signer, it should be sp address or sp's fund address
  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // sp_address is the operator address of sp
  string sp_address = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // deposit is a mount of token which used to deposit for SP
  cosmos.base.v1beta1.Coin deposit = 3 [(gogoproto.nullable) = false];
}

// MsgDepositResponse defines the Msg/Deposit response type.
message MsgDepositResponse {}

// MsgEditStorageProvider defines a SDK message for editing an existing sp.
message MsgEditStorageProvider {
  option (cosmos.msg.v1.signer) = "sp_address";

  string sp_address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string endpoint = 2;
  Description description = 3 [(gogoproto.nullable) = false];
}

// MsgEditStorageProviderResponse defines the Msg/EditStorageProvider response type.
message MsgEditStorageProviderResponse {}

// this line is used by starport scaffolding # proto/tx/message
