syntax = "proto3";

package bnbchain.greenfield.payment;

import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/bnb-chain/greenfield/x/payment/types";

// storage price of a specific sp
message SpStoragePrice {
  // sp address
  string sp_address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // update time, in unix timestamp
  int64 update_time = 2;
  // read quota price, in 10 ^ -8 bnb per byte
  string read_quota_price = 3 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  // store price, in 10 ^ -8 bnb per charge byte
  string store_price = 4 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
}
