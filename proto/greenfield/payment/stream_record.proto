syntax = "proto3";
package greenfield.payment;

import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/bnb-chain/greenfield/x/payment/types";

// StreamAccountStatus defines the status of a stream account
enum StreamAccountStatus {
  option (gogoproto.goproto_enum_prefix) = false;

  // STREAM_ACCOUNT_STATUS_ACTIVE defines the active status of a stream account.
  STREAM_ACCOUNT_STATUS_ACTIVE = 0;
  // STREAM_ACCOUNT_STATUS_FROZEN defines the frozen status of a stream account.
  // A frozen stream account cannot be used as payment address for buckets.
  // It can be unfrozen by depositing more BNB to the stream account.
  STREAM_ACCOUNT_STATUS_FROZEN = 1;
}

// Stream Payment Record of a stream account
message StreamRecord {
  // account address
  string account = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // latest update timestamp of the stream record
  int64 crud_timestamp = 2;
  // The per-second rate that an account's balance is changing.
  // It is the sum of the account's inbound and outbound flow rates.
  string netflow_rate = 3 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  // The balance of the stream account at the latest CRUD timestamp.
  string static_balance = 4 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  // reserved balance of the stream account
  // If the netflow rate is negative, the reserved balance is `netflow_rate * reserve_time`
  string buffer_balance = 5 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  // the locked balance of the stream account after it puts a new object and before the object is sealed
  string lock_balance = 6 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  // the status of the stream account
  StreamAccountStatus status = 7;
  // the unix timestamp when the stream account will be settled
  int64 settle_timestamp = 8;
  // the count of its out flows
  uint64 out_flow_count = 9;
  // the frozen netflow rate, which is used when resuming stream account
  string frozen_netflow_rate = 10 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
}
