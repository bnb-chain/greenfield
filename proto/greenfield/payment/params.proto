syntax = "proto3";
package greenfield.payment;

import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/bnb-chain/greenfield/x/payment/types";

// Params defines the parameters for the module.
message Params {
  // Time duration which the buffer balance need to be reserved for NetOutFlow e.g. 6 month
  uint64 reserve_time = 1 [(gogoproto.moretags) = "yaml:\"reserve_time\""];
  // The maximum number of payment accounts that can be created by one user
  uint64 payment_account_count_limit = 2 [(gogoproto.moretags) = "yaml:\"payment_account_count_limit\""];
  // Time duration threshold of forced settlement.
  // If dynamic balance is less than NetOutFlowRate * forcedSettleTime, the account can be forced settled.
  uint64 forced_settle_time = 3 [(gogoproto.moretags) = "yaml:\"forced_settle_time\""];
  // the maximum number of accounts that will be forced settled in one block
  uint64 max_auto_force_settle_num = 4 [(gogoproto.moretags) = "yaml:\"max_auto_force_settle_num\""];
  // The denom of fee charged in payment module
  string fee_denom = 5 [(gogoproto.moretags) = "yaml:\"fee_denom\""];
  // The tax rate to pay for validators in storage payment. The default value is 1%(0.01)
  string validator_tax_rate = 6 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
}
