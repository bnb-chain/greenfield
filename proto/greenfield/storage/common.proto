syntax = "proto3";
package bnbchain.greenfield.storage;

import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/bnb-chain/greenfield/x/storage/types";

enum SourceType {
  option (gogoproto.goproto_enum_prefix) = false;

  SOURCE_TYPE_ORIGIN = 0;
  SOURCE_TYPE_BSC_CROSS_CHAIN = 1;
}

enum ReadQuota {
  option (gogoproto.goproto_enum_prefix) = false;

  READ_QUOTA_FREE = 0;
  READ_QUOTA_1G = 1;
  READ_QUOTA_10G = 2;
}

// OutFlowInUSD defines the accumulative outflow stream rate in USD
// from a stream account or a bucket to a SP
message OutFlowInUSD {
  // SP(service provider) stream account address
  string sp_address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // flow rate in USD
  string rate = 2 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
}
