syntax = "proto3";
package greenfield.virtualgroup;

import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/bnb-chain/greenfield/x/virtualgroup/types";

message EventCreateGlobalVirtualGroup {
  uint32 id = 1;
  uint32 family_id = 2;

  uint32 primary_sp_id = 3;
  repeated uint32 secondary_sp_ids = 4;

  uint64 stored_size = 5;
  string virtual_payment_address = 6 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // total_deposit defines the number of tokens deposited by this storage provider for staking.
  string total_deposit = 7 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
}

message EventCreateGlobalVirtualGroupFamily {
  uint32 id = 1;

  string virtual_payment_address = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

message EventDeleteGlobalVirtualGroup {
  uint32 id = 1;
}

message EventUpdateGlobalVirtualGroup {
  uint32 id = 1;
  uint64 store_size = 2;
  // total_deposit defines the number of tokens deposited by this storage provider for staking.
  string total_deposit = 3 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
}

message EventCreateLocalVirtualGroup {
  uint32 id = 1;
  // id is the unique identification for bucket.
  string bucket_id = 2 [
    (cosmos_proto.scalar) = "cosmos.Uint",
    (gogoproto.customtype) = "Uint",
    (gogoproto.nullable) = false
  ];
  uint32 global_virtual_group_id = 3;
  uint64 stored_size = 4;
}

message EventUpdateLocalVirtualGroup {
  uint32 id = 1;
  uint32 global_virtual_group_id = 2;
  uint64 stored_size = 3;
}

message EventSwapOut {
  uint32 storage_provider_id = 1;
  uint32 global_virtual_group_family_id = 2;
  repeated uint32 global_virtual_group_ids = 3;
  uint32 successor_sp_id = 4;
}

message EventStorageProviderExit {
  uint32 storage_provider_id = 1;
  string operator_address = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

message EventCompleteStorageProviderExit {
  uint32 storage_provider_id = 1;
  string operator_address = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // total_deposit defines the number of tokens deposited by this storage provider for staking.
  string total_deposit = 3 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
}
