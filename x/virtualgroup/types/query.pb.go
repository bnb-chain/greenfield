// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: greenfield/virtualgroup/query.proto

package types

import (
	context "context"
	fmt "fmt"
	query "github.com/cosmos/cosmos-sdk/types/query"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// QueryParamsRequest is request type for the Query/Params RPC method.
type QueryParamsRequest struct {
}

func (m *QueryParamsRequest) Reset()         { *m = QueryParamsRequest{} }
func (m *QueryParamsRequest) String() string { return proto.CompactTextString(m) }
func (*QueryParamsRequest) ProtoMessage()    {}
func (*QueryParamsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_83cd53fc415e00e7, []int{0}
}
func (m *QueryParamsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryParamsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryParamsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryParamsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryParamsRequest.Merge(m, src)
}
func (m *QueryParamsRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryParamsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryParamsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryParamsRequest proto.InternalMessageInfo

// QueryParamsResponse is response type for the Query/Params RPC method.
type QueryParamsResponse struct {
	// params holds all the parameters of this module.
	Params Params `protobuf:"bytes,1,opt,name=params,proto3" json:"params"`
}

func (m *QueryParamsResponse) Reset()         { *m = QueryParamsResponse{} }
func (m *QueryParamsResponse) String() string { return proto.CompactTextString(m) }
func (*QueryParamsResponse) ProtoMessage()    {}
func (*QueryParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_83cd53fc415e00e7, []int{1}
}
func (m *QueryParamsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryParamsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryParamsResponse.Merge(m, src)
}
func (m *QueryParamsResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryParamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryParamsResponse proto.InternalMessageInfo

func (m *QueryParamsResponse) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

type QueryGlobalVirtualGroupRequest struct {
	GlobalVirtualGroupId uint32 `protobuf:"varint,1,opt,name=global_virtual_group_id,json=globalVirtualGroupId,proto3" json:"global_virtual_group_id,omitempty"`
}

func (m *QueryGlobalVirtualGroupRequest) Reset()         { *m = QueryGlobalVirtualGroupRequest{} }
func (m *QueryGlobalVirtualGroupRequest) String() string { return proto.CompactTextString(m) }
func (*QueryGlobalVirtualGroupRequest) ProtoMessage()    {}
func (*QueryGlobalVirtualGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_83cd53fc415e00e7, []int{2}
}
func (m *QueryGlobalVirtualGroupRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGlobalVirtualGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGlobalVirtualGroupRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGlobalVirtualGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGlobalVirtualGroupRequest.Merge(m, src)
}
func (m *QueryGlobalVirtualGroupRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryGlobalVirtualGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGlobalVirtualGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGlobalVirtualGroupRequest proto.InternalMessageInfo

func (m *QueryGlobalVirtualGroupRequest) GetGlobalVirtualGroupId() uint32 {
	if m != nil {
		return m.GlobalVirtualGroupId
	}
	return 0
}

type QueryGlobalVirtualGroupResponse struct {
	GlobalVirtualGroup *GlobalVirtualGroup `protobuf:"bytes,1,opt,name=global_virtual_group,json=globalVirtualGroup,proto3" json:"global_virtual_group,omitempty"`
}

func (m *QueryGlobalVirtualGroupResponse) Reset()         { *m = QueryGlobalVirtualGroupResponse{} }
func (m *QueryGlobalVirtualGroupResponse) String() string { return proto.CompactTextString(m) }
func (*QueryGlobalVirtualGroupResponse) ProtoMessage()    {}
func (*QueryGlobalVirtualGroupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_83cd53fc415e00e7, []int{3}
}
func (m *QueryGlobalVirtualGroupResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGlobalVirtualGroupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGlobalVirtualGroupResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGlobalVirtualGroupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGlobalVirtualGroupResponse.Merge(m, src)
}
func (m *QueryGlobalVirtualGroupResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryGlobalVirtualGroupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGlobalVirtualGroupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGlobalVirtualGroupResponse proto.InternalMessageInfo

func (m *QueryGlobalVirtualGroupResponse) GetGlobalVirtualGroup() *GlobalVirtualGroup {
	if m != nil {
		return m.GlobalVirtualGroup
	}
	return nil
}

type QueryGlobalVirtualGroupBySPIDRequest struct {
	StorageProviderId uint32             `protobuf:"varint,1,opt,name=storage_provider_id,json=storageProviderId,proto3" json:"storage_provider_id,omitempty"`
	Pagination        *query.PageRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (m *QueryGlobalVirtualGroupBySPIDRequest) Reset()         { *m = QueryGlobalVirtualGroupBySPIDRequest{} }
func (m *QueryGlobalVirtualGroupBySPIDRequest) String() string { return proto.CompactTextString(m) }
func (*QueryGlobalVirtualGroupBySPIDRequest) ProtoMessage()    {}
func (*QueryGlobalVirtualGroupBySPIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_83cd53fc415e00e7, []int{4}
}
func (m *QueryGlobalVirtualGroupBySPIDRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGlobalVirtualGroupBySPIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGlobalVirtualGroupBySPIDRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGlobalVirtualGroupBySPIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGlobalVirtualGroupBySPIDRequest.Merge(m, src)
}
func (m *QueryGlobalVirtualGroupBySPIDRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryGlobalVirtualGroupBySPIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGlobalVirtualGroupBySPIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGlobalVirtualGroupBySPIDRequest proto.InternalMessageInfo

func (m *QueryGlobalVirtualGroupBySPIDRequest) GetStorageProviderId() uint32 {
	if m != nil {
		return m.StorageProviderId
	}
	return 0
}

func (m *QueryGlobalVirtualGroupBySPIDRequest) GetPagination() *query.PageRequest {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type QueryGlobalVirtualGroupBySPIDResponse struct {
	GlobalVirtualGroups []*GlobalVirtualGroup `protobuf:"bytes,1,rep,name=global_virtual_groups,json=globalVirtualGroups,proto3" json:"global_virtual_groups,omitempty"`
	Pagination          *query.PageResponse   `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (m *QueryGlobalVirtualGroupBySPIDResponse) Reset()         { *m = QueryGlobalVirtualGroupBySPIDResponse{} }
func (m *QueryGlobalVirtualGroupBySPIDResponse) String() string { return proto.CompactTextString(m) }
func (*QueryGlobalVirtualGroupBySPIDResponse) ProtoMessage()    {}
func (*QueryGlobalVirtualGroupBySPIDResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_83cd53fc415e00e7, []int{5}
}
func (m *QueryGlobalVirtualGroupBySPIDResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGlobalVirtualGroupBySPIDResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGlobalVirtualGroupBySPIDResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGlobalVirtualGroupBySPIDResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGlobalVirtualGroupBySPIDResponse.Merge(m, src)
}
func (m *QueryGlobalVirtualGroupBySPIDResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryGlobalVirtualGroupBySPIDResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGlobalVirtualGroupBySPIDResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGlobalVirtualGroupBySPIDResponse proto.InternalMessageInfo

func (m *QueryGlobalVirtualGroupBySPIDResponse) GetGlobalVirtualGroups() []*GlobalVirtualGroup {
	if m != nil {
		return m.GlobalVirtualGroups
	}
	return nil
}

func (m *QueryGlobalVirtualGroupBySPIDResponse) GetPagination() *query.PageResponse {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type QueryGlobalVirtualGroupByFamilyIDRequest struct {
	StorageProviderId          uint32 `protobuf:"varint,1,opt,name=storage_provider_id,json=storageProviderId,proto3" json:"storage_provider_id,omitempty"`
	GlobalVirtualGroupFamilyId uint32 `protobuf:"varint,2,opt,name=global_virtual_group_family_id,json=globalVirtualGroupFamilyId,proto3" json:"global_virtual_group_family_id,omitempty"`
}

func (m *QueryGlobalVirtualGroupByFamilyIDRequest) Reset() {
	*m = QueryGlobalVirtualGroupByFamilyIDRequest{}
}
func (m *QueryGlobalVirtualGroupByFamilyIDRequest) String() string { return proto.CompactTextString(m) }
func (*QueryGlobalVirtualGroupByFamilyIDRequest) ProtoMessage()    {}
func (*QueryGlobalVirtualGroupByFamilyIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_83cd53fc415e00e7, []int{6}
}
func (m *QueryGlobalVirtualGroupByFamilyIDRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGlobalVirtualGroupByFamilyIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGlobalVirtualGroupByFamilyIDRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGlobalVirtualGroupByFamilyIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGlobalVirtualGroupByFamilyIDRequest.Merge(m, src)
}
func (m *QueryGlobalVirtualGroupByFamilyIDRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryGlobalVirtualGroupByFamilyIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGlobalVirtualGroupByFamilyIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGlobalVirtualGroupByFamilyIDRequest proto.InternalMessageInfo

func (m *QueryGlobalVirtualGroupByFamilyIDRequest) GetStorageProviderId() uint32 {
	if m != nil {
		return m.StorageProviderId
	}
	return 0
}

func (m *QueryGlobalVirtualGroupByFamilyIDRequest) GetGlobalVirtualGroupFamilyId() uint32 {
	if m != nil {
		return m.GlobalVirtualGroupFamilyId
	}
	return 0
}

type QueryGlobalVirtualGroupByFamilyIDResponse struct {
	GlobalVirtualGroups []*GlobalVirtualGroup `protobuf:"bytes,1,rep,name=global_virtual_groups,json=globalVirtualGroups,proto3" json:"global_virtual_groups,omitempty"`
}

func (m *QueryGlobalVirtualGroupByFamilyIDResponse) Reset() {
	*m = QueryGlobalVirtualGroupByFamilyIDResponse{}
}
func (m *QueryGlobalVirtualGroupByFamilyIDResponse) String() string {
	return proto.CompactTextString(m)
}
func (*QueryGlobalVirtualGroupByFamilyIDResponse) ProtoMessage() {}
func (*QueryGlobalVirtualGroupByFamilyIDResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_83cd53fc415e00e7, []int{7}
}
func (m *QueryGlobalVirtualGroupByFamilyIDResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGlobalVirtualGroupByFamilyIDResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGlobalVirtualGroupByFamilyIDResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGlobalVirtualGroupByFamilyIDResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGlobalVirtualGroupByFamilyIDResponse.Merge(m, src)
}
func (m *QueryGlobalVirtualGroupByFamilyIDResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryGlobalVirtualGroupByFamilyIDResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGlobalVirtualGroupByFamilyIDResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGlobalVirtualGroupByFamilyIDResponse proto.InternalMessageInfo

func (m *QueryGlobalVirtualGroupByFamilyIDResponse) GetGlobalVirtualGroups() []*GlobalVirtualGroup {
	if m != nil {
		return m.GlobalVirtualGroups
	}
	return nil
}

type QueryGlobalVirtualGroupFamiliesRequest struct {
	StorageProviderId uint32             `protobuf:"varint,1,opt,name=storage_provider_id,json=storageProviderId,proto3" json:"storage_provider_id,omitempty"`
	Pagination        *query.PageRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (m *QueryGlobalVirtualGroupFamiliesRequest) Reset() {
	*m = QueryGlobalVirtualGroupFamiliesRequest{}
}
func (m *QueryGlobalVirtualGroupFamiliesRequest) String() string { return proto.CompactTextString(m) }
func (*QueryGlobalVirtualGroupFamiliesRequest) ProtoMessage()    {}
func (*QueryGlobalVirtualGroupFamiliesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_83cd53fc415e00e7, []int{8}
}
func (m *QueryGlobalVirtualGroupFamiliesRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGlobalVirtualGroupFamiliesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGlobalVirtualGroupFamiliesRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGlobalVirtualGroupFamiliesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGlobalVirtualGroupFamiliesRequest.Merge(m, src)
}
func (m *QueryGlobalVirtualGroupFamiliesRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryGlobalVirtualGroupFamiliesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGlobalVirtualGroupFamiliesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGlobalVirtualGroupFamiliesRequest proto.InternalMessageInfo

func (m *QueryGlobalVirtualGroupFamiliesRequest) GetStorageProviderId() uint32 {
	if m != nil {
		return m.StorageProviderId
	}
	return 0
}

func (m *QueryGlobalVirtualGroupFamiliesRequest) GetPagination() *query.PageRequest {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type QueryGlobalVirtualGroupFamiliesResponse struct {
	GlobalVirtualGroupFamilies []*GlobalVirtualGroupFamily `protobuf:"bytes,1,rep,name=global_virtual_group_families,json=globalVirtualGroupFamilies,proto3" json:"global_virtual_group_families,omitempty"`
	Pagination                 *query.PageResponse         `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (m *QueryGlobalVirtualGroupFamiliesResponse) Reset() {
	*m = QueryGlobalVirtualGroupFamiliesResponse{}
}
func (m *QueryGlobalVirtualGroupFamiliesResponse) String() string { return proto.CompactTextString(m) }
func (*QueryGlobalVirtualGroupFamiliesResponse) ProtoMessage()    {}
func (*QueryGlobalVirtualGroupFamiliesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_83cd53fc415e00e7, []int{9}
}
func (m *QueryGlobalVirtualGroupFamiliesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGlobalVirtualGroupFamiliesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGlobalVirtualGroupFamiliesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGlobalVirtualGroupFamiliesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGlobalVirtualGroupFamiliesResponse.Merge(m, src)
}
func (m *QueryGlobalVirtualGroupFamiliesResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryGlobalVirtualGroupFamiliesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGlobalVirtualGroupFamiliesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGlobalVirtualGroupFamiliesResponse proto.InternalMessageInfo

func (m *QueryGlobalVirtualGroupFamiliesResponse) GetGlobalVirtualGroupFamilies() []*GlobalVirtualGroupFamily {
	if m != nil {
		return m.GlobalVirtualGroupFamilies
	}
	return nil
}

func (m *QueryGlobalVirtualGroupFamiliesResponse) GetPagination() *query.PageResponse {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type QueryGlobalVirtualGroupFamilyRequest struct {
	StorageProviderId uint32 `protobuf:"varint,1,opt,name=storage_provider_id,json=storageProviderId,proto3" json:"storage_provider_id,omitempty"`
	FamilyId          uint32 `protobuf:"varint,2,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
}

func (m *QueryGlobalVirtualGroupFamilyRequest) Reset()         { *m = QueryGlobalVirtualGroupFamilyRequest{} }
func (m *QueryGlobalVirtualGroupFamilyRequest) String() string { return proto.CompactTextString(m) }
func (*QueryGlobalVirtualGroupFamilyRequest) ProtoMessage()    {}
func (*QueryGlobalVirtualGroupFamilyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_83cd53fc415e00e7, []int{10}
}
func (m *QueryGlobalVirtualGroupFamilyRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGlobalVirtualGroupFamilyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGlobalVirtualGroupFamilyRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGlobalVirtualGroupFamilyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGlobalVirtualGroupFamilyRequest.Merge(m, src)
}
func (m *QueryGlobalVirtualGroupFamilyRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryGlobalVirtualGroupFamilyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGlobalVirtualGroupFamilyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGlobalVirtualGroupFamilyRequest proto.InternalMessageInfo

func (m *QueryGlobalVirtualGroupFamilyRequest) GetStorageProviderId() uint32 {
	if m != nil {
		return m.StorageProviderId
	}
	return 0
}

func (m *QueryGlobalVirtualGroupFamilyRequest) GetFamilyId() uint32 {
	if m != nil {
		return m.FamilyId
	}
	return 0
}

type QueryGlobalVirtualGroupFamilyResponse struct {
	GlobalVirtualGroupFamily *GlobalVirtualGroupFamily `protobuf:"bytes,1,opt,name=global_virtual_group_family,json=globalVirtualGroupFamily,proto3" json:"global_virtual_group_family,omitempty"`
}

func (m *QueryGlobalVirtualGroupFamilyResponse) Reset()         { *m = QueryGlobalVirtualGroupFamilyResponse{} }
func (m *QueryGlobalVirtualGroupFamilyResponse) String() string { return proto.CompactTextString(m) }
func (*QueryGlobalVirtualGroupFamilyResponse) ProtoMessage()    {}
func (*QueryGlobalVirtualGroupFamilyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_83cd53fc415e00e7, []int{11}
}
func (m *QueryGlobalVirtualGroupFamilyResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGlobalVirtualGroupFamilyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGlobalVirtualGroupFamilyResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGlobalVirtualGroupFamilyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGlobalVirtualGroupFamilyResponse.Merge(m, src)
}
func (m *QueryGlobalVirtualGroupFamilyResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryGlobalVirtualGroupFamilyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGlobalVirtualGroupFamilyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGlobalVirtualGroupFamilyResponse proto.InternalMessageInfo

func (m *QueryGlobalVirtualGroupFamilyResponse) GetGlobalVirtualGroupFamily() *GlobalVirtualGroupFamily {
	if m != nil {
		return m.GlobalVirtualGroupFamily
	}
	return nil
}

func init() {
	proto.RegisterType((*QueryParamsRequest)(nil), "greenfield.virtualgroup.QueryParamsRequest")
	proto.RegisterType((*QueryParamsResponse)(nil), "greenfield.virtualgroup.QueryParamsResponse")
	proto.RegisterType((*QueryGlobalVirtualGroupRequest)(nil), "greenfield.virtualgroup.QueryGlobalVirtualGroupRequest")
	proto.RegisterType((*QueryGlobalVirtualGroupResponse)(nil), "greenfield.virtualgroup.QueryGlobalVirtualGroupResponse")
	proto.RegisterType((*QueryGlobalVirtualGroupBySPIDRequest)(nil), "greenfield.virtualgroup.QueryGlobalVirtualGroupBySPIDRequest")
	proto.RegisterType((*QueryGlobalVirtualGroupBySPIDResponse)(nil), "greenfield.virtualgroup.QueryGlobalVirtualGroupBySPIDResponse")
	proto.RegisterType((*QueryGlobalVirtualGroupByFamilyIDRequest)(nil), "greenfield.virtualgroup.QueryGlobalVirtualGroupByFamilyIDRequest")
	proto.RegisterType((*QueryGlobalVirtualGroupByFamilyIDResponse)(nil), "greenfield.virtualgroup.QueryGlobalVirtualGroupByFamilyIDResponse")
	proto.RegisterType((*QueryGlobalVirtualGroupFamiliesRequest)(nil), "greenfield.virtualgroup.QueryGlobalVirtualGroupFamiliesRequest")
	proto.RegisterType((*QueryGlobalVirtualGroupFamiliesResponse)(nil), "greenfield.virtualgroup.QueryGlobalVirtualGroupFamiliesResponse")
	proto.RegisterType((*QueryGlobalVirtualGroupFamilyRequest)(nil), "greenfield.virtualgroup.QueryGlobalVirtualGroupFamilyRequest")
	proto.RegisterType((*QueryGlobalVirtualGroupFamilyResponse)(nil), "greenfield.virtualgroup.QueryGlobalVirtualGroupFamilyResponse")
}

func init() {
	proto.RegisterFile("greenfield/virtualgroup/query.proto", fileDescriptor_83cd53fc415e00e7)
}

var fileDescriptor_83cd53fc415e00e7 = []byte{
	// 782 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x56, 0xcf, 0x4f, 0xd4, 0x4c,
	0x18, 0xde, 0xe1, 0xfb, 0x3e, 0xf2, 0xf1, 0x7e, 0xf9, 0x0e, 0x0e, 0x6b, 0xd8, 0x14, 0xec, 0x6a,
	0x45, 0xc0, 0x1f, 0xb4, 0x01, 0xf9, 0x15, 0x03, 0xa8, 0x1b, 0x03, 0xe1, 0x62, 0xd6, 0xd5, 0x68,
	0x62, 0x62, 0x36, 0x53, 0x3a, 0x94, 0x49, 0x76, 0x3b, 0xa5, 0xed, 0x12, 0xf7, 0x66, 0x3c, 0x73,
	0x30, 0xf1, 0xe4, 0x85, 0xf8, 0x97, 0x78, 0xe6, 0x88, 0xf1, 0x20, 0xf1, 0xa0, 0x06, 0x3c, 0xe8,
	0x7f, 0x61, 0x76, 0x3a, 0x2b, 0x2c, 0xdb, 0x59, 0xe8, 0x6a, 0xf4, 0xd6, 0x74, 0xde, 0x1f, 0xcf,
	0xf3, 0xcc, 0xd3, 0xf7, 0x2d, 0x5c, 0x74, 0x03, 0x4a, 0xbd, 0x35, 0x46, 0x2b, 0x8e, 0xb5, 0xc9,
	0x82, 0xa8, 0x46, 0x2a, 0x6e, 0xc0, 0x6b, 0xbe, 0xb5, 0x51, 0xa3, 0x41, 0xdd, 0xf4, 0x03, 0x1e,
	0x71, 0x3c, 0x70, 0x18, 0x64, 0x1e, 0x0d, 0xd2, 0xae, 0xac, 0xf2, 0xb0, 0xca, 0x43, 0xcb, 0x26,
	0x21, 0x8d, 0x33, 0xac, 0xcd, 0x09, 0x9b, 0x46, 0x64, 0xc2, 0xf2, 0x89, 0xcb, 0x3c, 0x12, 0x31,
	0xee, 0xc5, 0x45, 0xb4, 0xac, 0xcb, 0x5d, 0x2e, 0x1e, 0xad, 0xc6, 0x93, 0x7c, 0x3b, 0xe4, 0x72,
	0xee, 0x56, 0xa8, 0x45, 0x7c, 0x66, 0x11, 0xcf, 0xe3, 0x91, 0x48, 0x09, 0xe5, 0xe9, 0xb0, 0x0a,
	0x9d, 0x4f, 0x02, 0x52, 0x6d, 0x46, 0x29, 0x39, 0x44, 0x75, 0x9f, 0xca, 0x20, 0x23, 0x0b, 0xf8,
	0x5e, 0x03, 0x60, 0x51, 0x64, 0x96, 0xe8, 0x46, 0x8d, 0x86, 0x91, 0xf1, 0x00, 0xfa, 0x5b, 0xde,
	0x86, 0x3e, 0xf7, 0x42, 0x8a, 0x17, 0xa0, 0x37, 0xee, 0x90, 0x43, 0xe7, 0xd1, 0xd8, 0x7f, 0x93,
	0x79, 0x53, 0xa1, 0x80, 0x19, 0x27, 0x16, 0xfe, 0xde, 0xf9, 0x98, 0xcf, 0x94, 0x64, 0x92, 0xf1,
	0x08, 0x74, 0x51, 0x75, 0xb9, 0xc2, 0x6d, 0x52, 0x79, 0x18, 0xc7, 0x2f, 0x37, 0xe2, 0x65, 0x5f,
	0x3c, 0x0d, 0x03, 0xae, 0x38, 0x2c, 0xcb, 0x6a, 0x65, 0x51, 0xae, 0xcc, 0x1c, 0xd1, 0xf1, 0xff,
	0x52, 0xd6, 0x6d, 0xcb, 0x5d, 0x71, 0x8c, 0x67, 0x08, 0xf2, 0xca, 0xca, 0x12, 0xfb, 0x13, 0xc8,
	0x26, 0x95, 0x96, 0x4c, 0xae, 0x2a, 0x99, 0x24, 0x94, 0xc4, 0xed, 0x20, 0x8c, 0x6d, 0x04, 0xc3,
	0x0a, 0x08, 0x85, 0xfa, 0xfd, 0xe2, 0xca, 0x9d, 0x26, 0x45, 0x13, 0xfa, 0xc3, 0x88, 0x07, 0xc4,
	0xa5, 0x65, 0x3f, 0xe0, 0x9b, 0xcc, 0xa1, 0xc1, 0x21, 0xbd, 0x33, 0xf2, 0xa8, 0x28, 0x4f, 0x56,
	0x1c, 0xbc, 0x04, 0x70, 0xe8, 0x99, 0x5c, 0x8f, 0x40, 0x3b, 0x62, 0xc6, 0x06, 0x33, 0x1b, 0x06,
	0x33, 0x63, 0x4b, 0x4a, 0x83, 0x99, 0x45, 0xe2, 0x52, 0xd9, 0xab, 0x74, 0x24, 0xd3, 0x78, 0x8b,
	0xe0, 0xd2, 0x09, 0x00, 0xa5, 0x52, 0x65, 0x38, 0x9b, 0xa4, 0x54, 0xe3, 0xd2, 0xff, 0x4a, 0x2b,
	0x55, 0x7f, 0xbb, 0x54, 0x21, 0x5e, 0x4e, 0xa0, 0x34, 0x7a, 0x22, 0xa5, 0x18, 0x5d, 0x0b, 0xa7,
	0x6d, 0x04, 0x63, 0x4a, 0x4e, 0x4b, 0xa4, 0xca, 0x2a, 0xf5, 0xee, 0x85, 0x2f, 0x80, 0x9e, 0xe8,
	0xc5, 0x35, 0x51, 0xb7, 0x91, 0xda, 0x23, 0x52, 0xb5, 0x76, 0x8a, 0xb2, 0xb5, 0x63, 0x6c, 0x21,
	0xb8, 0x7c, 0x0a, 0x80, 0xbf, 0x49, 0x78, 0xe3, 0x35, 0x82, 0x11, 0x05, 0x1c, 0x01, 0x86, 0xd1,
	0xf0, 0x4f, 0xdb, 0xf4, 0x2b, 0x82, 0xd1, 0x13, 0x21, 0x4a, 0xbd, 0x22, 0x38, 0xa7, 0xbe, 0x21,
	0x46, 0x9b, 0xba, 0x4d, 0xa4, 0xd0, 0x2d, 0xbe, 0x13, 0xe5, 0x9d, 0x32, 0xfa, 0x0b, 0xdd, 0x1b,
	0x2a, 0x27, 0x86, 0x44, 0xd1, 0xe5, 0x55, 0x0c, 0x42, 0xdf, 0x71, 0x8f, 0xfe, 0xbb, 0xd6, 0x74,
	0xe4, 0x2b, 0xf5, 0x18, 0x68, 0x76, 0x95, 0xea, 0xfa, 0x30, 0xd8, 0xc1, 0xff, 0x72, 0x6e, 0x76,
	0xa1, 0x6d, 0x4e, 0xf5, 0xbd, 0x4c, 0x7e, 0xe8, 0x83, 0x7f, 0x04, 0x36, 0xbc, 0x85, 0xa0, 0x37,
	0x5e, 0x21, 0x58, 0xed, 0xfa, 0xf6, 0xbd, 0xa5, 0x5d, 0x3b, 0x5d, 0x70, 0xcc, 0xd0, 0x18, 0x7d,
	0xfe, 0xee, 0xcb, 0xcb, 0x9e, 0x0b, 0x38, 0x6f, 0x75, 0xde, 0xa7, 0xf8, 0x0d, 0x02, 0xdc, 0xce,
	0x07, 0xcf, 0x76, 0xee, 0xa6, 0x5c, 0x73, 0xda, 0x5c, 0xfa, 0x44, 0x09, 0x79, 0x5a, 0x40, 0xb6,
	0xf0, 0xb8, 0x12, 0x72, 0xd2, 0x9d, 0xe1, 0x3d, 0x04, 0x39, 0xd5, 0xdc, 0xc7, 0x0b, 0x69, 0xd1,
	0xb4, 0x2c, 0x34, 0x6d, 0xb1, 0xdb, 0x74, 0x49, 0x69, 0x41, 0x50, 0x9a, 0xc5, 0xd3, 0xa9, 0x28,
	0x95, 0xed, 0x7a, 0x39, 0xf4, 0x99, 0x83, 0xbf, 0x21, 0x18, 0xea, 0x34, 0x5d, 0xf1, 0xed, 0xf4,
	0xf8, 0x8e, 0xad, 0x0e, 0xad, 0xf0, 0x33, 0x25, 0x24, 0xcd, 0x82, 0xa0, 0x39, 0x8f, 0x6f, 0xa4,
	0xa6, 0xf9, 0xe3, 0x63, 0xc6, 0x9f, 0x10, 0x68, 0xea, 0xb9, 0x88, 0x6f, 0xa6, 0x85, 0x79, 0x6c,
	0xe8, 0x6b, 0xb7, 0xba, 0x2f, 0x20, 0x59, 0x2e, 0x0a, 0x96, 0x73, 0x78, 0x26, 0x1d, 0xcb, 0xe6,
	0xc4, 0xc6, 0xef, 0x13, 0x8d, 0x1a, 0x8b, 0x99, 0xde, 0xa8, 0x2d, 0x73, 0x34, 0xbd, 0x51, 0x5b,
	0x07, 0xa2, 0x31, 0x2f, 0xb8, 0xcd, 0xe0, 0xa9, 0x2e, 0xb8, 0xd5, 0x0b, 0x77, 0x77, 0xf6, 0x75,
	0xb4, 0xbb, 0xaf, 0xa3, 0xcf, 0xfb, 0x3a, 0x7a, 0x71, 0xa0, 0x67, 0x76, 0x0f, 0xf4, 0xcc, 0xde,
	0x81, 0x9e, 0x79, 0x3c, 0xe5, 0xb2, 0x68, 0xbd, 0x66, 0x9b, 0xab, 0xbc, 0x6a, 0xd9, 0x9e, 0x3d,
	0xbe, 0xba, 0x4e, 0x98, 0x77, 0xb4, 0xc7, 0xd3, 0x84, 0xdf, 0x77, 0xbb, 0x57, 0xfc, 0xbf, 0x5f,
	0xff, 0x1e, 0x00, 0x00, 0xff, 0xff, 0xa9, 0x1e, 0x71, 0xc4, 0xaa, 0x0c, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// QueryClient is the client API for Query service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QueryClient interface {
	// Parameters queries the parameters of the module.
	Params(ctx context.Context, in *QueryParamsRequest, opts ...grpc.CallOption) (*QueryParamsResponse, error)
	// Queries a global virtual group by its id.
	GlobalVirtualGroup(ctx context.Context, in *QueryGlobalVirtualGroupRequest, opts ...grpc.CallOption) (*QueryGlobalVirtualGroupResponse, error)
	// Queries a list of global virtual groups by its storage provider id.
	GlobalVirtualGroupBySPID(ctx context.Context, in *QueryGlobalVirtualGroupBySPIDRequest, opts ...grpc.CallOption) (*QueryGlobalVirtualGroupBySPIDResponse, error)
	// Queries a list of global virtual groups by family id.
	GlobalVirtualGroupByFamilyID(ctx context.Context, in *QueryGlobalVirtualGroupByFamilyIDRequest, opts ...grpc.CallOption) (*QueryGlobalVirtualGroupByFamilyIDResponse, error)
	// Queries a list of global virtual group families by storage provider id.
	GlobalVirtualGroupFamilies(ctx context.Context, in *QueryGlobalVirtualGroupFamiliesRequest, opts ...grpc.CallOption) (*QueryGlobalVirtualGroupFamiliesResponse, error)
	// Queries a global virtual group family by its id.
	GlobalVirtualGroupFamily(ctx context.Context, in *QueryGlobalVirtualGroupFamilyRequest, opts ...grpc.CallOption) (*QueryGlobalVirtualGroupFamilyResponse, error)
}

type queryClient struct {
	cc grpc1.ClientConn
}

func NewQueryClient(cc grpc1.ClientConn) QueryClient {
	return &queryClient{cc}
}

func (c *queryClient) Params(ctx context.Context, in *QueryParamsRequest, opts ...grpc.CallOption) (*QueryParamsResponse, error) {
	out := new(QueryParamsResponse)
	err := c.cc.Invoke(ctx, "/greenfield.virtualgroup.Query/Params", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) GlobalVirtualGroup(ctx context.Context, in *QueryGlobalVirtualGroupRequest, opts ...grpc.CallOption) (*QueryGlobalVirtualGroupResponse, error) {
	out := new(QueryGlobalVirtualGroupResponse)
	err := c.cc.Invoke(ctx, "/greenfield.virtualgroup.Query/GlobalVirtualGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) GlobalVirtualGroupBySPID(ctx context.Context, in *QueryGlobalVirtualGroupBySPIDRequest, opts ...grpc.CallOption) (*QueryGlobalVirtualGroupBySPIDResponse, error) {
	out := new(QueryGlobalVirtualGroupBySPIDResponse)
	err := c.cc.Invoke(ctx, "/greenfield.virtualgroup.Query/GlobalVirtualGroupBySPID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) GlobalVirtualGroupByFamilyID(ctx context.Context, in *QueryGlobalVirtualGroupByFamilyIDRequest, opts ...grpc.CallOption) (*QueryGlobalVirtualGroupByFamilyIDResponse, error) {
	out := new(QueryGlobalVirtualGroupByFamilyIDResponse)
	err := c.cc.Invoke(ctx, "/greenfield.virtualgroup.Query/GlobalVirtualGroupByFamilyID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) GlobalVirtualGroupFamilies(ctx context.Context, in *QueryGlobalVirtualGroupFamiliesRequest, opts ...grpc.CallOption) (*QueryGlobalVirtualGroupFamiliesResponse, error) {
	out := new(QueryGlobalVirtualGroupFamiliesResponse)
	err := c.cc.Invoke(ctx, "/greenfield.virtualgroup.Query/GlobalVirtualGroupFamilies", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) GlobalVirtualGroupFamily(ctx context.Context, in *QueryGlobalVirtualGroupFamilyRequest, opts ...grpc.CallOption) (*QueryGlobalVirtualGroupFamilyResponse, error) {
	out := new(QueryGlobalVirtualGroupFamilyResponse)
	err := c.cc.Invoke(ctx, "/greenfield.virtualgroup.Query/GlobalVirtualGroupFamily", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QueryServer is the server API for Query service.
type QueryServer interface {
	// Parameters queries the parameters of the module.
	Params(context.Context, *QueryParamsRequest) (*QueryParamsResponse, error)
	// Queries a global virtual group by its id.
	GlobalVirtualGroup(context.Context, *QueryGlobalVirtualGroupRequest) (*QueryGlobalVirtualGroupResponse, error)
	// Queries a list of global virtual groups by its storage provider id.
	GlobalVirtualGroupBySPID(context.Context, *QueryGlobalVirtualGroupBySPIDRequest) (*QueryGlobalVirtualGroupBySPIDResponse, error)
	// Queries a list of global virtual groups by family id.
	GlobalVirtualGroupByFamilyID(context.Context, *QueryGlobalVirtualGroupByFamilyIDRequest) (*QueryGlobalVirtualGroupByFamilyIDResponse, error)
	// Queries a list of global virtual group families by storage provider id.
	GlobalVirtualGroupFamilies(context.Context, *QueryGlobalVirtualGroupFamiliesRequest) (*QueryGlobalVirtualGroupFamiliesResponse, error)
	// Queries a global virtual group family by its id.
	GlobalVirtualGroupFamily(context.Context, *QueryGlobalVirtualGroupFamilyRequest) (*QueryGlobalVirtualGroupFamilyResponse, error)
}

// UnimplementedQueryServer can be embedded to have forward compatible implementations.
type UnimplementedQueryServer struct {
}

func (*UnimplementedQueryServer) Params(ctx context.Context, req *QueryParamsRequest) (*QueryParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Params not implemented")
}
func (*UnimplementedQueryServer) GlobalVirtualGroup(ctx context.Context, req *QueryGlobalVirtualGroupRequest) (*QueryGlobalVirtualGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GlobalVirtualGroup not implemented")
}
func (*UnimplementedQueryServer) GlobalVirtualGroupBySPID(ctx context.Context, req *QueryGlobalVirtualGroupBySPIDRequest) (*QueryGlobalVirtualGroupBySPIDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GlobalVirtualGroupBySPID not implemented")
}
func (*UnimplementedQueryServer) GlobalVirtualGroupByFamilyID(ctx context.Context, req *QueryGlobalVirtualGroupByFamilyIDRequest) (*QueryGlobalVirtualGroupByFamilyIDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GlobalVirtualGroupByFamilyID not implemented")
}
func (*UnimplementedQueryServer) GlobalVirtualGroupFamilies(ctx context.Context, req *QueryGlobalVirtualGroupFamiliesRequest) (*QueryGlobalVirtualGroupFamiliesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GlobalVirtualGroupFamilies not implemented")
}
func (*UnimplementedQueryServer) GlobalVirtualGroupFamily(ctx context.Context, req *QueryGlobalVirtualGroupFamilyRequest) (*QueryGlobalVirtualGroupFamilyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GlobalVirtualGroupFamily not implemented")
}

func RegisterQueryServer(s grpc1.Server, srv QueryServer) {
	s.RegisterService(&_Query_serviceDesc, srv)
}

func _Query_Params_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryParamsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).Params(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/greenfield.virtualgroup.Query/Params",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).Params(ctx, req.(*QueryParamsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_GlobalVirtualGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryGlobalVirtualGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).GlobalVirtualGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/greenfield.virtualgroup.Query/GlobalVirtualGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).GlobalVirtualGroup(ctx, req.(*QueryGlobalVirtualGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_GlobalVirtualGroupBySPID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryGlobalVirtualGroupBySPIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).GlobalVirtualGroupBySPID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/greenfield.virtualgroup.Query/GlobalVirtualGroupBySPID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).GlobalVirtualGroupBySPID(ctx, req.(*QueryGlobalVirtualGroupBySPIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_GlobalVirtualGroupByFamilyID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryGlobalVirtualGroupByFamilyIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).GlobalVirtualGroupByFamilyID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/greenfield.virtualgroup.Query/GlobalVirtualGroupByFamilyID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).GlobalVirtualGroupByFamilyID(ctx, req.(*QueryGlobalVirtualGroupByFamilyIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_GlobalVirtualGroupFamilies_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryGlobalVirtualGroupFamiliesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).GlobalVirtualGroupFamilies(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/greenfield.virtualgroup.Query/GlobalVirtualGroupFamilies",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).GlobalVirtualGroupFamilies(ctx, req.(*QueryGlobalVirtualGroupFamiliesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_GlobalVirtualGroupFamily_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryGlobalVirtualGroupFamilyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).GlobalVirtualGroupFamily(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/greenfield.virtualgroup.Query/GlobalVirtualGroupFamily",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).GlobalVirtualGroupFamily(ctx, req.(*QueryGlobalVirtualGroupFamilyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Query_serviceDesc = grpc.ServiceDesc{
	ServiceName: "greenfield.virtualgroup.Query",
	HandlerType: (*QueryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Params",
			Handler:    _Query_Params_Handler,
		},
		{
			MethodName: "GlobalVirtualGroup",
			Handler:    _Query_GlobalVirtualGroup_Handler,
		},
		{
			MethodName: "GlobalVirtualGroupBySPID",
			Handler:    _Query_GlobalVirtualGroupBySPID_Handler,
		},
		{
			MethodName: "GlobalVirtualGroupByFamilyID",
			Handler:    _Query_GlobalVirtualGroupByFamilyID_Handler,
		},
		{
			MethodName: "GlobalVirtualGroupFamilies",
			Handler:    _Query_GlobalVirtualGroupFamilies_Handler,
		},
		{
			MethodName: "GlobalVirtualGroupFamily",
			Handler:    _Query_GlobalVirtualGroupFamily_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "greenfield/virtualgroup/query.proto",
}

func (m *QueryParamsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryParamsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryParamsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *QueryParamsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryParamsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryParamsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintQuery(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *QueryGlobalVirtualGroupRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGlobalVirtualGroupRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGlobalVirtualGroupRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.GlobalVirtualGroupId != 0 {
		i = encodeVarintQuery(dAtA, i, uint64(m.GlobalVirtualGroupId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *QueryGlobalVirtualGroupResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGlobalVirtualGroupResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGlobalVirtualGroupResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.GlobalVirtualGroup != nil {
		{
			size, err := m.GlobalVirtualGroup.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryGlobalVirtualGroupBySPIDRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGlobalVirtualGroupBySPIDRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGlobalVirtualGroupBySPIDRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.StorageProviderId != 0 {
		i = encodeVarintQuery(dAtA, i, uint64(m.StorageProviderId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *QueryGlobalVirtualGroupBySPIDResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGlobalVirtualGroupBySPIDResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGlobalVirtualGroupBySPIDResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.GlobalVirtualGroups) > 0 {
		for iNdEx := len(m.GlobalVirtualGroups) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.GlobalVirtualGroups[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *QueryGlobalVirtualGroupByFamilyIDRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGlobalVirtualGroupByFamilyIDRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGlobalVirtualGroupByFamilyIDRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.GlobalVirtualGroupFamilyId != 0 {
		i = encodeVarintQuery(dAtA, i, uint64(m.GlobalVirtualGroupFamilyId))
		i--
		dAtA[i] = 0x10
	}
	if m.StorageProviderId != 0 {
		i = encodeVarintQuery(dAtA, i, uint64(m.StorageProviderId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *QueryGlobalVirtualGroupByFamilyIDResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGlobalVirtualGroupByFamilyIDResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGlobalVirtualGroupByFamilyIDResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.GlobalVirtualGroups) > 0 {
		for iNdEx := len(m.GlobalVirtualGroups) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.GlobalVirtualGroups[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *QueryGlobalVirtualGroupFamiliesRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGlobalVirtualGroupFamiliesRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGlobalVirtualGroupFamiliesRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.StorageProviderId != 0 {
		i = encodeVarintQuery(dAtA, i, uint64(m.StorageProviderId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *QueryGlobalVirtualGroupFamiliesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGlobalVirtualGroupFamiliesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGlobalVirtualGroupFamiliesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.GlobalVirtualGroupFamilies) > 0 {
		for iNdEx := len(m.GlobalVirtualGroupFamilies) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.GlobalVirtualGroupFamilies[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *QueryGlobalVirtualGroupFamilyRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGlobalVirtualGroupFamilyRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGlobalVirtualGroupFamilyRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.FamilyId != 0 {
		i = encodeVarintQuery(dAtA, i, uint64(m.FamilyId))
		i--
		dAtA[i] = 0x10
	}
	if m.StorageProviderId != 0 {
		i = encodeVarintQuery(dAtA, i, uint64(m.StorageProviderId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *QueryGlobalVirtualGroupFamilyResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGlobalVirtualGroupFamilyResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGlobalVirtualGroupFamilyResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.GlobalVirtualGroupFamily != nil {
		{
			size, err := m.GlobalVirtualGroupFamily.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintQuery(dAtA []byte, offset int, v uint64) int {
	offset -= sovQuery(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *QueryParamsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *QueryParamsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Params.Size()
	n += 1 + l + sovQuery(uint64(l))
	return n
}

func (m *QueryGlobalVirtualGroupRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.GlobalVirtualGroupId != 0 {
		n += 1 + sovQuery(uint64(m.GlobalVirtualGroupId))
	}
	return n
}

func (m *QueryGlobalVirtualGroupResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.GlobalVirtualGroup != nil {
		l = m.GlobalVirtualGroup.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGlobalVirtualGroupBySPIDRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.StorageProviderId != 0 {
		n += 1 + sovQuery(uint64(m.StorageProviderId))
	}
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGlobalVirtualGroupBySPIDResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.GlobalVirtualGroups) > 0 {
		for _, e := range m.GlobalVirtualGroups {
			l = e.Size()
			n += 1 + l + sovQuery(uint64(l))
		}
	}
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGlobalVirtualGroupByFamilyIDRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.StorageProviderId != 0 {
		n += 1 + sovQuery(uint64(m.StorageProviderId))
	}
	if m.GlobalVirtualGroupFamilyId != 0 {
		n += 1 + sovQuery(uint64(m.GlobalVirtualGroupFamilyId))
	}
	return n
}

func (m *QueryGlobalVirtualGroupByFamilyIDResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.GlobalVirtualGroups) > 0 {
		for _, e := range m.GlobalVirtualGroups {
			l = e.Size()
			n += 1 + l + sovQuery(uint64(l))
		}
	}
	return n
}

func (m *QueryGlobalVirtualGroupFamiliesRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.StorageProviderId != 0 {
		n += 1 + sovQuery(uint64(m.StorageProviderId))
	}
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGlobalVirtualGroupFamiliesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.GlobalVirtualGroupFamilies) > 0 {
		for _, e := range m.GlobalVirtualGroupFamilies {
			l = e.Size()
			n += 1 + l + sovQuery(uint64(l))
		}
	}
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGlobalVirtualGroupFamilyRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.StorageProviderId != 0 {
		n += 1 + sovQuery(uint64(m.StorageProviderId))
	}
	if m.FamilyId != 0 {
		n += 1 + sovQuery(uint64(m.FamilyId))
	}
	return n
}

func (m *QueryGlobalVirtualGroupFamilyResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.GlobalVirtualGroupFamily != nil {
		l = m.GlobalVirtualGroupFamily.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func sovQuery(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozQuery(x uint64) (n int) {
	return sovQuery(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *QueryParamsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryParamsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryParamsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryParamsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryParamsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGlobalVirtualGroupRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGlobalVirtualGroupRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGlobalVirtualGroupRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GlobalVirtualGroupId", wireType)
			}
			m.GlobalVirtualGroupId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GlobalVirtualGroupId |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGlobalVirtualGroupResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGlobalVirtualGroupResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGlobalVirtualGroupResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GlobalVirtualGroup", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.GlobalVirtualGroup == nil {
				m.GlobalVirtualGroup = &GlobalVirtualGroup{}
			}
			if err := m.GlobalVirtualGroup.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGlobalVirtualGroupBySPIDRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGlobalVirtualGroupBySPIDRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGlobalVirtualGroupBySPIDRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StorageProviderId", wireType)
			}
			m.StorageProviderId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StorageProviderId |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageRequest{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGlobalVirtualGroupBySPIDResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGlobalVirtualGroupBySPIDResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGlobalVirtualGroupBySPIDResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GlobalVirtualGroups", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GlobalVirtualGroups = append(m.GlobalVirtualGroups, &GlobalVirtualGroup{})
			if err := m.GlobalVirtualGroups[len(m.GlobalVirtualGroups)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageResponse{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGlobalVirtualGroupByFamilyIDRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGlobalVirtualGroupByFamilyIDRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGlobalVirtualGroupByFamilyIDRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StorageProviderId", wireType)
			}
			m.StorageProviderId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StorageProviderId |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GlobalVirtualGroupFamilyId", wireType)
			}
			m.GlobalVirtualGroupFamilyId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GlobalVirtualGroupFamilyId |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGlobalVirtualGroupByFamilyIDResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGlobalVirtualGroupByFamilyIDResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGlobalVirtualGroupByFamilyIDResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GlobalVirtualGroups", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GlobalVirtualGroups = append(m.GlobalVirtualGroups, &GlobalVirtualGroup{})
			if err := m.GlobalVirtualGroups[len(m.GlobalVirtualGroups)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGlobalVirtualGroupFamiliesRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGlobalVirtualGroupFamiliesRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGlobalVirtualGroupFamiliesRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StorageProviderId", wireType)
			}
			m.StorageProviderId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StorageProviderId |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageRequest{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGlobalVirtualGroupFamiliesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGlobalVirtualGroupFamiliesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGlobalVirtualGroupFamiliesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GlobalVirtualGroupFamilies", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GlobalVirtualGroupFamilies = append(m.GlobalVirtualGroupFamilies, &GlobalVirtualGroupFamily{})
			if err := m.GlobalVirtualGroupFamilies[len(m.GlobalVirtualGroupFamilies)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageResponse{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGlobalVirtualGroupFamilyRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGlobalVirtualGroupFamilyRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGlobalVirtualGroupFamilyRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StorageProviderId", wireType)
			}
			m.StorageProviderId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StorageProviderId |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FamilyId", wireType)
			}
			m.FamilyId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FamilyId |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGlobalVirtualGroupFamilyResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGlobalVirtualGroupFamilyResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGlobalVirtualGroupFamilyResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GlobalVirtualGroupFamily", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.GlobalVirtualGroupFamily == nil {
				m.GlobalVirtualGroupFamily = &GlobalVirtualGroupFamily{}
			}
			if err := m.GlobalVirtualGroupFamily.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipQuery(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthQuery
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupQuery
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthQuery
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthQuery        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowQuery          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupQuery = fmt.Errorf("proto: unexpected end of group")
)
