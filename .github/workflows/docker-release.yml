name: Docker

on:
  push:
    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}
  IMAGE_SOURCE: https://github.com/${{ github.repository }}


jobs:
  # Push image to GitHub Packages.
  push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v3

      - name: Build image
        run: |
          docker build . \
          --label "org.opencontainers.image.source=${IMAGE_SOURCE}" \
          --label "org.opencontainers.image.revision=$(git rev-parse HEAD)" \
          --label "org.opencontainers.image.version=$(git describe --tags --abbrev=0)" \
          --label "org.opencontainers.image.licenses=LGPL-3.0,AGPL-3.0" \
          -f ./Dockerfile -t "${IMAGE_NAME}"

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push image
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_NAME=$IMAGE_NAME
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_NAME:$VERSION
          docker tag $IMAGE_NAME $IMAGE_NAME:latest
          docker push $IMAGE_NAME:$VERSION
          docker push $IMAGE_NAME:latest
          